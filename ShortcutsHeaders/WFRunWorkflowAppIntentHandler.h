//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "INRunWorkflowIntentHandling-Protocol.h"
#import "WFApplicationStateObserver-Protocol.h"
#import "WFLibraryRunCoordinatorDelegate-Protocol.h"
#import "WFLibraryRunCoordinatorObserver-Protocol.h"
#import "WFRunWorkflowIntentStepQueueDelegate-Protocol.h"
#import "WFSiriUserInterface-Protocol.h"

@class NSArray, NSString, RLMRealm, RLMRealmConfiguration, WFDispatchSourceTimer, WFIntentExtensionMailbox, WFLibraryRunCoordinator, WFRunWorkflowIntentStepQueue, WFWorkflowControllerState;

@interface WFRunWorkflowAppIntentHandler : NSObject <WFLibraryRunCoordinatorDelegate, WFRunWorkflowIntentStepQueueDelegate, WFLibraryRunCoordinatorObserver, WFApplicationStateObserver, INRunWorkflowIntentHandling, WFSiriUserInterface>
{
    NSArray *airPlayRouteIDs;
    RLMRealmConfiguration *_realmConfiguration;
    WFLibraryRunCoordinator *_runCoordinator;
    WFIntentExtensionMailbox *_mailbox;
    WFRunWorkflowIntentStepQueue *_stepQueue;
    NSString *_handingOffWorkflowID;
    NSString *_runningWorkflowID;
    NSArray *_steps;
    WFWorkflowControllerState *_stateForHandoff;
    WFDispatchSourceTimer *_confirmTimeoutTimer;
    long long _executionContext;
}

+ (void)initialize;
@property(nonatomic) long long executionContext; // @synthesize executionContext=_executionContext;
@property(retain, nonatomic) WFDispatchSourceTimer *confirmTimeoutTimer; // @synthesize confirmTimeoutTimer=_confirmTimeoutTimer;
@property(retain, nonatomic) WFWorkflowControllerState *stateForHandoff; // @synthesize stateForHandoff=_stateForHandoff;
@property(retain, nonatomic) NSArray *steps; // @synthesize steps=_steps;
@property(copy, nonatomic) NSString *runningWorkflowID; // @synthesize runningWorkflowID=_runningWorkflowID;
@property(copy, nonatomic) NSString *handingOffWorkflowID; // @synthesize handingOffWorkflowID=_handingOffWorkflowID;
@property(readonly, nonatomic) WFRunWorkflowIntentStepQueue *stepQueue; // @synthesize stepQueue=_stepQueue;
@property(readonly, nonatomic) WFIntentExtensionMailbox *mailbox; // @synthesize mailbox=_mailbox;
@property(readonly, nonatomic) WFLibraryRunCoordinator *runCoordinator; // @synthesize runCoordinator=_runCoordinator;
@property(readonly, nonatomic) RLMRealmConfiguration *realmConfiguration; // @synthesize realmConfiguration=_realmConfiguration;
@property(retain, nonatomic) NSArray *airPlayRouteIDs; // @synthesize airPlayRouteIDs;
- (void).cxx_destruct;
- (id)stepQueue:(id)arg1 sendingResponseForTimeout:(_Bool)arg2;
- (void)cancelServerLoopTimeoutTimer;
- (void)startServerLoopTimeoutTimer;
- (void)applicationContext:(id)arg1 applicationStateDidChange:(long long)arg2;
- (void)runCoordinator:(id)arg1 didFinishRunningWorkflow:(id)arg2 withError:(id)arg3;
- (void)handOffWorkflow:(id)arg1;
- (void)prepareToHandOffWorkflowID:(id)arg1;
- (_Bool)runCoordinator:(id)arg1 handleUnsupportedEnvironmentForAction:(id)arg2 currentState:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)runCoordinator:(id)arg1 handOffWithState:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)runCoordinator:(id)arg1 userInterfaceForWorkflow:(id)arg2;
- (void)setAirPlayAudioRoutesIfNecessaryWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)openURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)openInteractionInApp:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)confirmInteraction:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)showInteraction:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)showInteraction:(id)arg1 requiringConfirmation:(_Bool)arg2 requiringAuthentication:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)speakText:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)presentAlert:(id)arg1;
- (id)runningWorkflow;
- (id)workflowRunSourceForExecutionContext:(long long)arg1;
- (_Bool)completeHandOffWithIntent:(id)arg1;
- (void)startRunningWorkflow:(id)arg1;
- (void)stopWaiting;
- (void)handleRunWorkflow:(id)arg1 completion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) RLMRealm *realm;
- (void)dealloc;
- (id)initWithRealm:(id)arg1 runCoordinator:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

